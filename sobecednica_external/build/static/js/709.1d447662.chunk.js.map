{"version":3,"file":"static/js/709.1d447662.chunk.js","mappings":"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","sources":["components/ButtonSubmit/ButtonSubmit.jsx","constants/constUIMSgs/formHintsMsgs.js","components/AuthForm/AuthForm.jsx","utils/formUtils/passwordUtils.js","pages/PageAuth/PageAuth.jsx"],"sourcesContent":["import './ButtonSubmit.css'\nimport React from \"react\";\n\nexport function ButtonSubmit(props) {\n    return (\n        <div id={\"SubmitButton\"}>\n            <div className={\"text-button-submit\"}>\n                <input className={\"input-submit-button\"} type=\"submit\" value={props.text}/>\n            </div>\n        </div>\n    )\n}","export const FIELD_IS_REQUIRED_TO_FILLING = 'Это поле обязательно для заполнения'\nexport const PLEASE_FILL_THIS_FIELD_MSG = 'Пожалуйста, заполните это поле'\nexport const PLEASE_SELECT_THE_FILE = 'Пожалуйста, выберите файл.'","import './AuthForm.css'\nimport {ButtonSubmit} from \"../ButtonSubmit\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {PLEASE_FILL_THIS_FIELD_MSG} from \"../../constants/constUIMSgs/formHintsMsgs\";\nimport {showHidePassword} from \"../../utils/formUtils/passwordUtils\";\n\n\nexport function AuthForm(props) {\n\n    return (\n        <>\n            <div className={\"auth-form-background\"}>\n                <form className={\"auth-form\"} action=\"\" method=\"POST\"\n                      onInput={e => e.target.setCustomValidity('')}\n                      onInvalid={e => e.target.setCustomValidity(PLEASE_FILL_THIS_FIELD_MSG)}\n                      onSubmit={(event) => {\n                          props.submitForm(event)\n                      }\n                      }>\n                    <div className={\"input-container\"}>\n                        <div className={\"field-hint\"}>Логин</div>\n                        <input type=\"text\" autoComplete=\"on\" id=\"login\" name={\"login\"} required/>\n                    </div>\n                    <div className={\"input-container password\"}>\n                        <div className={\"field-hint\"}>Пароль</div>\n                        <input type=\"password\" autoComplete=\"on\" id=\"password-input\" name={\"password\"} required/>\n                        <div className=\"password-control\" onClick={\n                            (target) => {\n                                showHidePassword(target.target)\n                            }\n                        }></div>\n                    </div>\n                    <div className={\"submit-button-auth\"}>\n                        <ButtonSubmit text={\"Войти\"}></ButtonSubmit></div>\n                </form>\n            </div>\n            <div className={\"auth-hint-form\"}>\n                <div>Не зарегистрированы?</div>\n                <div><Link className={\"auth-hint-form-link\"} to={\"/registration\"}>Подайте заявку.</Link></div>\n            </div>\n        </>\n    )\n}","export function showHidePassword(target) {\n    let input = document.getElementById('password-input');\n    if (input.getAttribute('type') === 'password') {\n        target.classList.add('view');\n        input.setAttribute('type', 'text');\n    } else {\n        target.classList.remove('view');\n        input.setAttribute('type', 'password');\n    }\n    return false;\n}","import './PageAuth.css'\nimport React from \"react\";\n\nimport {Header} from \"../../components/Header\";\nimport {AuthForm} from \"../../components/AuthForm\";\n\nimport {FAILED_STR_VALUE, WARNING_STR_VALUE,} from \"../../constants/constStrValues\";\nimport {POST_LOGIN_ENDPOINT} from \"../../constants/endpoints\";\nimport {PopUpWrapper} from \"../../components/PopUp/ToastPopUp\";\nimport {AUTH_TYPE_LOGIN, FAILED_LOGIN_OR_PASSWORD_MSG, WARNING_AUTH_MSG} from \"../../constants/authFormMsgs\";\nimport {SOMETHING_WENT_WRONG} from \"../../constants/userMsgs/commonMsgs\";\nimport {PLEASE_FILL_THIS_FIELD_MSG} from \"../../constants/constUIMSgs/formHintsMsgs\";\nimport {CREATED_CODE, OK_STATUS_CODE} from \"../../constants/codeStatuses\";\n\nexport default class PageAuth extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmitForm = this.handleSubmitForm.bind(this)\n    }\n\n    handleSubmitForm(event) {\n        event.preventDefault()\n\n        let login = event.target[0].value.trim()\n        let password = event.target[1].value\n        const data = new URLSearchParams();\n        data.append('username', login) // 'username' is 'login' because of legacy causes\n        data.append('password', password)\n        if (login && password) {\n            fetch(POST_LOGIN_ENDPOINT, {\n                method: \"POST\",\n                credentials: 'include',\n                body: data,\n            }).then(response => {\n                if (response.status === OK_STATUS_CODE || response.status === CREATED_CODE) {\n                    this.props.checkAuth(response.status, AUTH_TYPE_LOGIN)\n                } else {\n                    window.localStorage.setItem(AUTH_TYPE_LOGIN, FAILED_STR_VALUE)\n                }\n            }).then(() => {\n                    if (window.localStorage.getItem(AUTH_TYPE_LOGIN) === FAILED_STR_VALUE) {\n                        PopUpWrapper('error', FAILED_LOGIN_OR_PASSWORD_MSG).then(\n                            () => window.localStorage.removeItem(AUTH_TYPE_LOGIN)\n                        ).catch(\n                            (err) => {\n                                window.localStorage.removeItem(AUTH_TYPE_LOGIN)\n                                PopUpWrapper('info', SOMETHING_WENT_WRONG)\n                            }\n                        )\n                    } else if (window.localStorage.getItem(AUTH_TYPE_LOGIN) === WARNING_STR_VALUE) {\n                        PopUpWrapper('warning', WARNING_AUTH_MSG).then(\n                            () => {\n                                window.localStorage.removeItem(AUTH_TYPE_LOGIN)\n                            }\n                        ).catch(\n                            (err) => {\n                                window.localStorage.removeItem(AUTH_TYPE_LOGIN)\n                                PopUpWrapper('info', SOMETHING_WENT_WRONG)\n                                console.log(err)\n                            }\n                        )\n                    }\n                }\n            )\n                .catch(err => {\n                    PopUpWrapper('info', SOMETHING_WENT_WRONG)\n                    console.log(err)\n                });\n        }\n    }\n\n    componentDidMount() {\n        let inputFields = [...document.querySelectorAll('input')]\n        for (let inputField of inputFields) {\n            inputField.title = PLEASE_FILL_THIS_FIELD_MSG\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"page-area-container\"}>\n                <Header page={\"pageAuth\"}></Header>\n                <div className={\"content-page-container\"}>\n                    <div className={\"additional-header-text\"}>Авторизация</div>\n                    <AuthForm submitForm={this.handleSubmitForm}></AuthForm>\n                </div>\n            </div>\n        )\n    }\n\n}\n"],"names":["ButtonSubmit","props","_jsx","id","children","className","type","value","text","PLEASE_FILL_THIS_FIELD_MSG","AuthForm","_jsxs","_Fragment","action","method","onInput","e","target","setCustomValidity","onInvalid","onSubmit","event","submitForm","autoComplete","name","required","onClick","input","document","getElementById","getAttribute","classList","add","setAttribute","remove","showHidePassword","Link","to","PageAuth","React","constructor","super","this","handleSubmitForm","bind","preventDefault","login","trim","password","data","URLSearchParams","append","fetch","POST_LOGIN_ENDPOINT","credentials","body","then","response","status","OK_STATUS_CODE","CREATED_CODE","checkAuth","AUTH_TYPE_LOGIN","window","localStorage","setItem","FAILED_STR_VALUE","getItem","PopUpWrapper","FAILED_LOGIN_OR_PASSWORD_MSG","removeItem","catch","err","SOMETHING_WENT_WRONG","WARNING_STR_VALUE","WARNING_AUTH_MSG","console","log","componentDidMount","inputFields","querySelectorAll","inputField","title","render","Header","page"],"sourceRoot":""}